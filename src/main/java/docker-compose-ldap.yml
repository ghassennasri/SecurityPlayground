version: "3.5"
services:
  zk-1:
    image: confluentinc/cp-zookeeper:6.1.0-1-ubi8
    restart: always
    container_name: zk-1
    hostname: zk-1
    ports:
      - "12181:12181"
    volumes:
      - data-zk-log-1:/var/lib/zookeeper/log
      - data-zk-data-1:/var/lib/zookeeper/data
    networks:
      - confluent
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=12181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
      - ZOOKEEPER_SASL_ENABLED="false"
  
  zk-2:
    image: confluentinc/cp-zookeeper:6.1.0-1-ubi8
    restart: always
    container_name: zk-2
    hostname: zk-2
    ports:
      - "22181:22181"
    volumes:
      - data-zk-log-2:/var/lib/zookeeper/log
      - data-zk-data-2:/var/lib/zookeeper/data
    networks:
      - confluent
    environment:
      - ZOOKEEPER_SERVER_ID=2
      - ZOOKEEPER_CLIENT_PORT=22181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
      - ZOOKEEPER_SASL_ENABLED="false"
  
  zk-3:
    image: confluentinc/cp-zookeeper:6.1.0-1-ubi8
    restart: always
    container_name: zk-3
    hostname: zk-3
    ports:
      - "32181:32181"
    volumes:
      - data-zk-log-3:/var/lib/zookeeper/log
      - data-zk-data-3:/var/lib/zookeeper/data
    networks:
      - confluent
    environment:
      - ZOOKEEPER_SERVER_ID=3
      - ZOOKEEPER_CLIENT_PORT=32181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
      - ZOOKEEPER_SASL_ENABLED="false"

  kafka-1:
    image: confluentinc/cp-server:6.1.0-1-ubi8
    restart: always
    container_name: kafka-1
    hostname: kafka-1
    ports:
      - "19092-19099:19092-19099"
    networks:
      - confluent
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ../resources/tls/kafka-1-creds:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181,zk-2:22181,zk-3:32181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092,SSL://0.0.0.0:19093,BROKER://0.0.0.0:9092,
                                  OUTSIDE-PLAIN://0.0.0.0:19094,OUTSIDE-SCRAM://0.0.0.0:19095,OUTSIDE-LDAP://0.0.0.0:19096
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1-external:19092,SSL://kafka-1-external:19093,BROKER://kafka-1:9092,
                                  OUTSIDE-PLAIN://kafka-1-external:19094,OUTSIDE-SCRAM://kafka-1-external:19095,
                                  OUTSIDE-LDAP://kafka-1-external:19096
      #KAFKA_LISTENERS: SSL://0.0.0.0:19093,BROKER://0.0.0.0:9092
      #KAFKA_ADVERTISED_LISTENERS: SSL://kafka-1-external:19093,BROKER://kafka-1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,BROKER:SASL_SSL,OUTSIDE-PLAIN:SASL_SSL,
                                            OUTSIDE-SCRAM:SASL_SSL,OUTSIDE-LDAP:SASL_SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-1.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-1.truststore.pkcs12
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_LISTENER_NAME_BROKER_SSL_CLIENT_AUTH: "required"
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER

      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                         username="admin" \
                                                         password="admin-secret" \
                                                         user_admin="admin-secret" \
                                                         user_producer="producer-secret" \
                                                         user_consumer="consumer-secret" ;
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SCRAM___SHA___256_SASL_JAAS_CONFIG : org.apache.kafka.common.security.scram.ScramLoginModule required
                                                         username="admin"
                                                         password="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
      KAFKA_LISTENER_NAME_BROKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required;
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      # kafka authenticates to the directory service with the bind user
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap-server:389
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluent,dc=io
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
      # locate users_ make sure to match these attributes and object classes with what's in your directory service
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluent,dc=io
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
      KAFKA_LDAP_USER_OBJECT_CLASS: inetorgperson
      # search groups for group-based authorization with rbac_ more on that later
      KAFKA_LDAP_SEARCH_MODE: GROUPS
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluent,dc=io
      KAFKA_LDAP_GROUP_OBJECT_CLASS: groupofnames
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: member
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluent,dc=io



  kafka-2:
    image: confluentinc/cp-server:6.1.0-1-ubi8
    restart: always
    container_name: kafka-2
    hostname: kafka-2
    ports:
      - "29092-29099:29092-29099"
    networks:
      - confluent
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ../resources/tls/kafka-2-creds:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 102
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181,zk-2:22181,zk-3:32181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,SSL://0.0.0.0:29093,BROKER://0.0.0.0:9092,
                      OUTSIDE-PLAIN://0.0.0.0:29094,OUTSIDE-SCRAM://0.0.0.0:29095,OUTSIDE-LDAP://0.0.0.0:29096
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2-external:29092,SSL://kafka-2-external:29093,BROKER://kafka-2:9092,
                                  OUTSIDE-PLAIN://kafka-2-external:29094,OUTSIDE-SCRAM://kafka-2-external:29095,
                                  OUTSIDE-LDAP://kafka-2-external:29096
      #KAFKA_LISTENERS: SSL://0.0.0.0:29093,BROKER://0.0.0.0:9092
      #KAFKA_ADVERTISED_LISTENERS: SSL://kafka-2-external:29093,BROKER://kafka-2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,BROKER:SASL_SSL,OUTSIDE-PLAIN:SASL_SSL,
                                            OUTSIDE-SCRAM:SASL_SSL,OUTSIDE-LDAP:SASL_SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-2.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-2.truststore.pkcs12
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_LISTENER_NAME_BROKER_SSL_CLIENT_AUTH: "required"
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER

      KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                          username="admin" \
                                                          password="admin-secret" \
                                                          user_admin="admin-secret" \
                                                          user_producer="producer-secret" \
                                                          user_consumer="consumer-secret" ;
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SCRAM___SHA___256_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required
                                                                            username="admin"
                                                                            password="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
      KAFKA_LISTENER_NAME_BROKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required;
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      # kafka authenticates to the directory service with the bind user
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap-server:389
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluent,dc=io
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
      # locate users_ make sure to match these attributes and object classes with what's in your directory service
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluent,dc=io
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
      KAFKA_LDAP_USER_OBJECT_CLASS: inetorgperson
      # search groups for group-based authorization with rbac_ more on that later
      KAFKA_LDAP_SEARCH_MODE: GROUPS
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluent,dc=io
      KAFKA_LDAP_GROUP_OBJECT_CLASS: groupofnames
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: member
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluent,dc=io


  kafka-3:
    image: confluentinc/cp-server:6.1.0-1-ubi8
    restart: always
    container_name: kafka-3
    hostname: kafka-3
    ports:
    - "39092-39099:39092-39099"
    networks:
      - confluent
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - ../resources/tls/kafka-3-creds:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 103
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181,zk-2:22181,zk-3:32181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:39092,SSL://0.0.0.0:39093,BROKER://0.0.0.0:9092,
                       OUTSIDE-PLAIN://0.0.0.0:39094,OUTSIDE-SCRAM://0.0.0.0:39095,OUTSIDE-LDAP://0.0.0.0:39096
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3-external:39092,SSL://kafka-3-external:39093,BROKER://kafka-3:9092,
                                  OUTSIDE-PLAIN://kafka-3-external:39094,OUTSIDE-SCRAM://kafka-3-external:39095,
                                  OUTSIDE-LDAP://kafka-3-external:39096
      #KAFKA_LISTENERS: SSL://0.0.0.0:39093,BROKER://0.0.0.0:9092
      #KAFKA_ADVERTISED_LISTENERS: SSL://kafka-3-external:39093,BROKER://kafka-3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,BROKER:SASL_SSL,OUTSIDE-PLAIN:SASL_SSL,
                                            OUTSIDE-SCRAM:SASL_SSL,OUTSIDE-LDAP:SASL_SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-3.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-3.truststore.pkcs12
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_LISTENER_NAME_BROKER_SSL_CLIENT_AUTH: "required"
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER

      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                          username="admin" \
                                                          password="admin-secret" \
                                                          user_admin="admin-secret" \
                                                          user_producer="producer-secret" \
                                                          user_consumer="consumer-secret" ;
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SCRAM___SHA___256_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required
        username="admin"
        password="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
      KAFKA_LISTENER_NAME_BROKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required;
      KAFKA_LISTENER_NAME_OUTSIDE___LDAP_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      # kafka authenticates to the directory service with the bind user
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap-server:389
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluent,dc=io
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
      # locate users_ make sure to match these attributes and object classes with what's in your directory service
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluent,dc=io
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
      KAFKA_LDAP_USER_OBJECT_CLASS: inetorgperson
      # search groups for group-based authorization with rbac_ more on that later
      KAFKA_LDAP_SEARCH_MODE: GROUPS
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluent,dc=io
      KAFKA_LDAP_GROUP_OBJECT_CLASS: groupofnames
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: member
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluent,dc=io
  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "Confluent"
      LDAP_DOMAIN: "confluent.io"
      LDAP_ADMIN_PASSWORD: "admin"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "true"
      LDAP_TLS: "true"
      LDAP_TLS_VERIFY_CLIENT: "never"
      LDAP_TLS_ENFORCE: "false"
      #LDAP_READONLY_USER_USERNAME: "readonly"
      #LDAP_READONLY_USER_PASSWORD: "readonly"

    tty: true
    stdin_open: true
    volumes:
      - ../resources/ldap/confluent.ldif:/container/service/slapd/assets/config/bootstrap/ldif/50-bootstrap.ldif
      - /var/lib/ldap
      - /etc/ldap/slapd.d
    ports:
      - "389:389"
      - "636:636"

    command: --copy-service
    # For replication to work correctly, domainname and hostname must be
    # set correctly so that "hostname"."domainname" equates to the
    # fully-qualified domain name for the host.
    domainname: "example.org"
    hostname: "ldap-server"
    networks:
      - confluent
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "8080:80"
    networks:
      - confluent

volumes:
  data-zk-log-1:
  data-zk-data-1:
  data-zk-log-2:
  data-zk-data-2:
  data-zk-log-3:
  data-zk-data-3:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:

networks:
  confluent:
