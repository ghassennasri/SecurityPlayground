version: "3.5"
services:
  zk-1:
    image: confluentinc/cp-zookeeper:6.1.0-1-ubi8
    restart: always
    container_name: zk-1
    hostname: zk-1
    ports:
      - "12181:12181"
    volumes:
      - data-zk-log-1:/var/lib/zookeeper/log
      - data-zk-data-1:/var/lib/zookeeper/data
    networks:
      confluent:
        ipv4_address: 172.28.0.5
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=12181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
      - ZOOKEEPER_SASL_ENABLED="false"
  
  zk-2:
    image: confluentinc/cp-zookeeper:6.1.0-1-ubi8
    restart: always
    container_name: zk-2
    hostname: zk-2
    ports:
      - "22181:22181"
    volumes:
      - data-zk-log-2:/var/lib/zookeeper/log
      - data-zk-data-2:/var/lib/zookeeper/data
    networks:
      confluent:
        ipv4_address: 172.28.0.6
    environment:
      - ZOOKEEPER_SERVER_ID=2
      - ZOOKEEPER_CLIENT_PORT=22181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
      - ZOOKEEPER_SASL_ENABLED="false"
  
  zk-3:
    image: confluentinc/cp-zookeeper:6.1.0-1-ubi8
    restart: always
    container_name: zk-3
    hostname: zk-3
    ports:
      - "32181:32181"
    volumes:
      - data-zk-log-3:/var/lib/zookeeper/log
      - data-zk-data-3:/var/lib/zookeeper/data
    networks:
      confluent:
        ipv4_address: 172.28.0.7
    environment:
      - ZOOKEEPER_SERVER_ID=3
      - ZOOKEEPER_CLIENT_PORT=32181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
      - ZOOKEEPER_SASL_ENABLED="false"

  client:
    image: confluentinc/cp-server:latest
    container_name: kafka_producer
    hostname: kafka_producer
    ports:
      - "8000:8000"
    networks:
      confluent:
        ipv4_address: 172.28.0.11
    extra_hosts:
      - "kafka-1-external:172.28.0.8"
      - "kafka-2-external:172.28.0.9"
      - "kafka-3-external:172.28.0.10"
    volumes:
      - ../resources/kdc/krb5.conf:/etc/krb5.conf
      - secret:/var/lib/secret
      - ../resources/client:/tmp/client
    command: /bin/bash -c 'while true; do echo testing; sleep 2; done;'

  kafka-1:
    image: confluentinc/cp-server:latest
    restart: always
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
    - kdc-kadmin
    ports:
      - "19092-19099:19092-19099"
    networks:
      confluent:
        ipv4_address: 172.28.0.8
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ../resources/tls/kafka-1-creds:/etc/kafka/secrets
      - ../resources/kdc/krb5.conf:/etc/krb5.conf
      - secret:/var/lib/secret
      - ../resources/kdc/brokers/broker1.sasl.jaas.config:/etc/kafka/broker1.sasl.jaas.config
      - ../resources/client:/tmp/client
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181,zk-2:22181,zk-3:32181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: -Djava.security.krb5.conf=/etc/krb5.conf
                  -Dsun.security.krb5.debug=true
                  -Dsun.security.krb5.debug
      #-Djava.security.auth.login.config=/etc/kafka/broker1.sasl.jaas.config
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092,SSL://0.0.0.0:19093,BROKER://0.0.0.0:9092,
                                  OUTSIDE-PLAIN://0.0.0.0:19094,OUTSIDE-SCRAM://0.0.0.0:19095,OUTSIDE-GSSAPI://0.0.0.0:19096
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1-external:19092,SSL://kafka-1-external:19093,BROKER://kafka-1:9092,
                                  OUTSIDE-PLAIN://kafka-1-external:19094,OUTSIDE-SCRAM://kafka-1-external:19095,
                                  OUTSIDE-GSSAPI://kafka-1:19096

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,BROKER:SASL_SSL,OUTSIDE-PLAIN:SASL_SSL,
                                            OUTSIDE-SCRAM:SASL_SSL,OUTSIDE-GSSAPI:SASL_PLAINTEXT
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-1.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-1.truststore.pkcs12
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_LISTENER_NAME_BROKER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_LISTENER_NAME_BROKER_SSL_CLIENT_AUTH: "required"
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER

      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      #KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:admin;User:kafka;User:schemaregistry;User:connect;User:controlcenter;User:ksqldb
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                         username="admin" \
                                                         password="admin-secret" \
                                                         user_admin="admin-secret" \
                                                         user_producer="producer-secret" \
                                                         user_consumer="consumer-secret" ;
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SCRAM___SHA___256_SASL_JAAS_CONFIG : org.apache.kafka.common.security.scram.ScramLoginModule required
                                                         username="admin"
                                                         password="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
      KAFKA_LISTENER_NAME_BROKER_GSSAPI_SASL_JAAS_CONFIG: "com.sun.security.auth.module.Krb5LoginModule required \
            useKeyTab=true \
            keyTab=\"/var/lib/secret/broker1.key\" \
            storeKey=true \
            useTicketCache=false \
            serviceName=\"kafka\" \
            principal=\"kafka/kafka-1@TEST.CONFLUENT.IO\";"
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_GSSAPI_SASL_JAAS_CONFIG:  "com.sun.security.auth.module.Krb5LoginModule required \
            useKeyTab=true \
            keyTab=\"/var/lib/secret/broker1.key\" \
            storeKey=true \
            useTicketCache=false \
            serviceName=\"kafka\" \
            principal=\"kafka/kafka-1@TEST.CONFLUENT.IO\";"


  kafka-2:
    image: confluentinc/cp-server:latest
    restart: always
    container_name: kafka-2
    depends_on:
      - kdc-kadmin
    hostname: kafka-2
    ports:
      - "29092-29099:29092-29099"
    networks:
      confluent:
        ipv4_address: 172.28.0.9
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ../resources/tls/kafka-2-creds:/etc/kafka/secrets
      - ../resources/kdc/krb5.conf:/etc/krb5.conf
      - secret:/var/lib/secret
      - ../resources/kdc/brokers/broker2.sasl.jaas.config:/etc/kafka/broker2.sasl.jaas.config
    environment:
      KAFKA_BROKER_ID: 102
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181,zk-2:22181,zk-3:32181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: -Djava.security.krb5.conf=/etc/krb5.conf
                  -Dsun.security.krb5.debug=true
                  -Dsun.security.krb5.debug
      #-Djava.security.auth.login.config=/etc/kafka/broker2.sasl.jaas.config
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,SSL://0.0.0.0:29093,BROKER://0.0.0.0:9092,
                      OUTSIDE-PLAIN://0.0.0.0:29094,OUTSIDE-SCRAM://0.0.0.0:29095,OUTSIDE-GSSAPI://0.0.0.0:29096
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2-external:29092,SSL://kafka-2-external:29093,BROKER://kafka-2:9092,
                                  OUTSIDE-PLAIN://kafka-2-external:29094,OUTSIDE-SCRAM://kafka-1-external:29095,
                                  OUTSIDE-GSSAPI://kafka-2:29096
      #KAFKA_LISTENERS: SSL://0.0.0.0:29093,BROKER://0.0.0.0:9092
      #KAFKA_ADVERTISED_LISTENERS: SSL://kafka-2-external:29093,BROKER://kafka-2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,BROKER:SASL_SSL,OUTSIDE-PLAIN:SASL_SSL,
                                            OUTSIDE-SCRAM:SASL_SSL,OUTSIDE-GSSAPI:SASL_PLAINTEXT
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-2.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-2.truststore.pkcs12
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_LISTENER_NAME_BROKER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_LISTENER_NAME_BROKER_SSL_CLIENT_AUTH: "required"
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER

      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      #KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:admin;User:kafka;User:schemaregistry;User:connect;User:controlcenter;User:ksqldb

      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                          username="admin" \
                                                          password="admin-secret" \
                                                          user_admin="admin-secret" \
                                                          user_producer="producer-secret" \
                                                          user_consumer="consumer-secret" ;
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SCRAM___SHA___256_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required
                                                                            username="admin"
                                                                            password="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
      KAFKA_LISTENER_NAME_BROKER_GSSAPI_SASL_JAAS_CONFIG: "com.sun.security.auth.module.Krb5LoginModule required \
                  useKeyTab=true \
                  keyTab=\"/var/lib/secret/broker2.key\" \
                  storeKey=true \
                  useTicketCache=false \
                  serviceName=\"kafka\" \
                  principal=\"kafka/kafka-2@TEST.CONFLUENT.IO\";"
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_GSSAPI_SASL_JAAS_CONFIG: "com.sun.security.auth.module.Krb5LoginModule required \
            useKeyTab=true \
            keyTab=\"/var/lib/secret/broker2.key\" \
            storeKey=true \
            useTicketCache=false \
            serviceName=\"kafka\" \
            principal=\"kafka/kafka-2@TEST.CONFLUENT.IO\";"


  kafka-3:
    image: confluentinc/cp-server:latest
    restart: always
    container_name: kafka-3
    depends_on:
      - kdc-kadmin
    hostname: kafka-3
    ports:
    - "39092-39099:39092-39099"
    networks:
      confluent:
        ipv4_address: 172.28.0.10
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - ../resources/tls/kafka-3-creds:/etc/kafka/secrets
      - ../resources/kdc/krb5.conf:/etc/krb5.conf
      - secret:/var/lib/secret
      - ../resources/kdc/brokers/broker2.sasl.jaas.config:/etc/kafka/broker2.sasl.jaas.config
    environment:
      KAFKA_BROKER_ID: 103
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181,zk-2:22181,zk-3:32181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: -Djava.security.krb5.conf=/etc/krb5.conf
                  -Dsun.security.krb5.debug=true
                  -Dsun.security.krb5.debug
      #-Djava.security.auth.login.config=/etc/kafka/broker2.sasl.jaas.config
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:39092,SSL://0.0.0.0:39093,BROKER://0.0.0.0:9092,
                       OUTSIDE-PLAIN://0.0.0.0:39094,OUTSIDE-SCRAM://0.0.0.0:39095,OUTSIDE-GSSAPI://0.0.0.0:39096
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3-external:39092,SSL://kafka-3-external:39093,BROKER://kafka-3:9092,
                                  OUTSIDE-PLAIN://kafka-3-external:39094,OUTSIDE-SCRAM://kafka-1-external:39095,
                                  OUTSIDE-GSSAPI://kafka-3:39096
      #KAFKA_LISTENERS: SSL://0.0.0.0:39093,BROKER://0.0.0.0:9092
      #KAFKA_ADVERTISED_LISTENERS: SSL://kafka-3-external:39093,BROKER://kafka-3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,BROKER:SASL_SSL,OUTSIDE-PLAIN:SASL_SSL,
                                            OUTSIDE-SCRAM:SASL_SSL,OUTSIDE-GSSAPI:SASL_PLAINTEXT
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-3.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-3.truststore.pkcs12
      KAFKA_LISTENER_NAME_BROKER_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_LISTENER_NAME_BROKER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_LISTENER_NAME_BROKER_SSL_CLIENT_AUTH: "required"
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER

      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      #KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:admin;User:kafka;User:schemaregistry;User:connect;User:controlcenter;User:ksqldb

      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                          username="admin" \
                                                          password="admin-secret" \
                                                          user_admin="admin-secret" \
                                                          user_producer="producer-secret" \
                                                          user_consumer="consumer-secret" ;
      KAFKA_LISTENER_NAME_OUTSIDE___PLAIN_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SCRAM___SHA___256_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required
        username="admin"
        password="admin-secret";
      KAFKA_LISTENER_NAME_OUTSIDE___SCRAM_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
      KAFKA_LISTENER_NAME_BROKER_GSSAPI_SASL_JAAS_CONFIG: "com.sun.security.auth.module.Krb5LoginModule required \
                  useKeyTab=true \
                  keyTab=\"/var/lib/secret/broker3.key\" \
                  storeKey=true \
                  useTicketCache=false \
                  serviceName=\"kafka\" \
                  principal=\"kafka/kafka-3@TEST.CONFLUENT.IO\";"
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_LISTENER_NAME_OUTSIDE___GSSAPI_GSSAPI_SASL_JAAS_CONFIG: "com.sun.security.auth.module.Krb5LoginModule required \
            useKeyTab=true \
            keyTab=\"/var/lib/secret/broker3.key\" \
            storeKey=true \
            useTicketCache=false \
            serviceName=\"kafka\" \
            principal=\"kafka/kafka-3@TEST.CONFLUENT.IO\";"
  kdc-kadmin:
   build: ../resources/kdc
   env_file: ../resources/kdc/kerberos.env
   container_name: kdc-server
   ports:
     - "88:88/tcp"
     - "88:88/udp"
     - "749-750:749-750"
   hostname: kdc-server
   volumes:
    - secret:/var/lib/secret
    # This is needed otherwise there won't be enough entropy to generate a new kerberos realm
    - /dev/urandom:/dev/random
   networks:
     confluent:
       ipv4_address: 172.28.0.12

  ubuntu:
    image: ubuntu:latest
    container_name: ubuntu
    hostname: ubuntu
    command: /bin/bash -c 'while true; do echo testing; sleep 2; done;'
    volumes:
      - secret:/var/lib/secret
    networks:
      confluent:
        ipv4_address: 172.28.0.13


volumes:
  data-zk-log-1:
  data-zk-data-1:
  data-zk-log-2:
  data-zk-data-2:
  data-zk-log-3:
  data-zk-data-3:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:
  secret:

networks:
  confluent:
    driver: bridge
    ipam:
     config:
      - subnet: 172.28.0.0/24
